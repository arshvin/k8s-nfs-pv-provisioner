apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: registry
    nodePort: 32001
    port: 443
    protocol: TCP
  selector:
    app: nginx
  type: NodePort

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: default
data:
  default.conf: |
     server {
        listen       80;
        server_name  localhost;

        access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
      }

  registry.conf: |
    upstream registry {
        server registry.container-registry.svc:5000;
    }

    server {
      listen              443 ssl;

      access_log  /var/log/nginx/host.access.log  main;

      ssl_certificate     /opt/cert.pem;
      ssl_certificate_key /opt/cert.pem;
      ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

      location / {
        proxy_pass         http://registry;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        proxy_read_timeout 900;
        proxy_buffering on;
        client_max_body_size 0;
      }
    }

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: default
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/
          name: registry-config
        - mountPath: /opt/cert.pem
          name: registry-cert
        livenessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
        readinessProbe:
          tcpSocket:
            port: 443
        ports:
        - containerPort: 80
          name: proxy-80
          protocol: TCP
        - containerPort: 443
          name: proxy-443
          protocol: TCP
      volumes:
      - hostPath:
          path: {{ proxy_cert_file }}
          type: File
        name: registry-cert
      - projected:
          sources:
          - configMap:
              name: nginx
        name: registry-config
