#Docker image location and name
imageName: microk8s:32001/nfs-provisioner

#The catalog in docker container which correstponds assetRoot of host filesystem
innerAssetRoot: /pv

#The stucture based on which the storage class will be created in k8s
storageClasses:
- name: storage-class1
  isDefaultClass: true
  provisionerName: some-vendor/some-provioner1
  reclaimPolicy: Delete
  parameters:
    assetRoot: /mnt/pv-root1/
    defaultOwnerAssetUid: "1000"
    defaultOwnerAssetGid: "1000"
- name: storage-class2
  isDefaultClass: false
  provisionerName: some-vendor/some-provioner2
  reclaimPolicy: Retain
  parameters:
    assetRoot: /mnt/pv-root2/
    defaultOwnerAssetUid: "99"
    defaultOwnerAssetGid: "99"
- name: storage-class3
  isDefaultClass: false
  provisionerName: some-vendor/some-provioner3
  reclaimPolicy: Retain
  parameters:
    assetRoot: /mnt/pv-root3/
    defaultOwnerAssetUid: "192"
    defaultOwnerAssetGid: "192"
- name: storage-class4
  isDefaultClass: false
  provisionerName: some-vendor/some-provioner4
  reclaimPolicy: Retain
  parameters:
    assetRoot: localhost:/mnt/pv-nfs-root4/
    defaultOwnerAssetUid: "192"
    defaultOwnerAssetGid: "192"

#The service's account detail behalf the provisoner will run in k8s
serviceAccount:
  create: true
  name: ""
  imagePullSecrets: []

#The name of the cluster role name. by default Release.Name is used
clusterRoleName: ""
#The name of the cluster role binding name. By default .Release.Name is used
clusterRoleBindingName: ""

podSecurityPolicyName: ""

addLabels: {}
